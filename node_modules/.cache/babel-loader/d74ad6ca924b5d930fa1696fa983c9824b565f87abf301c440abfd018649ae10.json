{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-app\\\\src\\\\components\\\\Todo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FilterButton from \"./Filterbtns\";\nimport './Todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\nfunction Task({\n  task,\n  index,\n  completeTask\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    style: {\n      textDecoration: task.completed ? \"line-through\" : \"\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: () => completeTask(index),\n      checked: task.completed ? \"checked\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), task.title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Task;\nfunction CreateTask({\n  addTask\n}) {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTask(value);\n    setValue(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      value: value,\n      placeholder: \"Add a new task\",\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateTask, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n_c3 = CreateTask;\nfunction Todo() {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  // Load TODOs from local storage on app startup\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem('tasks'));\n    if (storedTasks) {\n      setTasks(storedTasks);\n    }\n  }, []);\n\n  // Update local storage whenever TODOs change\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const [currentFilter, setCurrentFilter] = useState(FILTER_NAMES[0]);\n  const filtered = tasks.filter(FILTER_MAP[currentFilter]);\n  const addTask = title => {\n    const newTasks = [...tasks, {\n      title,\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    setTasks(newTasks);\n  };\n  const taskItems = filtered.map((task, index) => {\n    return /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      index: index,\n      completeTask: completeTask\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n      filterNames: FILTER_NAMES,\n      onFilter: setCurrentFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: taskItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-task\",\n      children: /*#__PURE__*/_jsxDEV(CreateTask, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s2(Todo, \"H3Etv96a6WcZqxTP9llUQdEAdu8=\");\n_c4 = Todo;\nexport default Todo;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"Task\");\n$RefreshReg$(_c3, \"CreateTask\");\n$RefreshReg$(_c4, \"Todo\");","map":{"version":3,"names":["React","useState","useEffect","FilterButton","jsxDEV","_jsxDEV","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","_c","Task","index","completeTask","className","style","textDecoration","children","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","title","_c2","CreateTask","addTask","_s","value","setValue","handleSubmit","e","preventDefault","onSubmit","placeholder","target","_c3","Todo","_s2","tasks","setTasks","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","currentFilter","setCurrentFilter","filtered","filter","newTasks","taskItems","map","filterNames","onFilter","_c4","$RefreshReg$"],"sources":["C:/my-app/src/components/Todo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FilterButton from \"./Filterbtns\"\nimport './Todo.css';\n\nconst FILTER_MAP = {\n    All: () => true,\n    Active: (task) => !task.completed,\n    Completed: (task) => task.completed\n  };\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\nfunction Task({ task, index, completeTask }) {\n    return (\n        <div  className=\"task\" style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}>\n            \n            <input type=\"checkbox\" onChange={() => completeTask(index)} checked={task.completed ? \"checked\" : \"\" } />\n            {task.title}\n\n        </div>\n    );\n}\n\nfunction CreateTask({ addTask }) {\n    const [value, setValue] = useState(\"\");\n   \n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!value) return;\n        addTask(value);\n        setValue(\"\");\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                placeholder=\"Add a new task\"\n                onChange={e => setValue(e.target.value)}\n            />\n        </form>\n    );\n}\n\n\nfunction Todo() {\n    const [tasks, setTasks] = useState([]);\n    // Load TODOs from local storage on app startup\n    \n        useEffect(() => {\n            const storedTasks = JSON.parse(localStorage.getItem('tasks'));\n            if (storedTasks) {\n                setTasks(storedTasks);\n            }\n            }, []);\n        \n          // Update local storage whenever TODOs change\n            useEffect(() => {\n                localStorage.setItem('tasks', JSON.stringify(tasks));\n            }, [tasks]);\n        \n    \n    const [currentFilter, setCurrentFilter] = useState(FILTER_NAMES[0]);  \n    const filtered = tasks.filter(FILTER_MAP[currentFilter]);\n     \n    const addTask = title => {\n        const newTasks = [...tasks, { title, completed: false }];\n        setTasks(newTasks);\n    };\n\n    const completeTask = index => {\n        const newTasks = [...tasks];\n        newTasks[index].completed = !newTasks[index].completed;\n       setTasks(newTasks);\n    };\n\n    const taskItems = filtered.map((task,index) => {\n        return (\n          <Task\n          task={task}\n          index={index}\n          completeTask={completeTask}\n          key={index}\n          />\n        );\n      });    \n      \n\n    return (\n        <div className=\"todo-container\">\n            <FilterButton\n            filterNames={FILTER_NAMES}\n            onFilter={setCurrentFilter}\n          />\n            <div className=\"tasks\">\n                {taskItems}\n            </div>\n            <div className=\"create-task\" >\n                <CreateTask addTask={addTask} />\n            </div>\n        </div>\n    );\n}\n\nexport default Todo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}